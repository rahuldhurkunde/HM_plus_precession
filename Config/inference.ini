[model]
name = single template 
low-frequency-cutoff = 25.0

[variable_params]
; waveform parameters that will vary in MCMC
mass1 =
mass2 =
spin1_a =
spin1_azimuthal =
spin1_polar =
spin2_a =
spin2_azimuthal =
spin2_polar =
coa_phase =
polarization = 
inclination = 
tc = 
ra =
dec = 
distance = 

[static_params]
; waveform parameters that will not change in MCMC
approximant = IMRPhenomPv2
f_lower = 25.0
f_ref = 25.0
t_c = 0
;distance = 200

[prior-tc]
name = uniform
min-tc = 10.
max-tc = 20.

[prior-mass1]
name = uniform
min-mass1 = 10.
max-mass1 = 98.

[prior-mass2]
name = uniform
min-mass2 = 10.
max-mass2 = 98.

;[waveform_transforms-mass1]
;name = custom
;inputs = tau0, tau3, f_lower
;mass1 = mass1_from_tau0_tau3(tau0,tau3, f_lower)

;[waveform_transforms-mass2]
;name = custom
;inputs = tau0, tau3, f_lower
;mass2 = mass2_from_tau0_tau3(tau0,tau3, f_lower)

[prior-spin1_a]
name = uniform
min-spin1_a = -0.99
max-spin1_a = 0.99

[prior-spin1_polar+spin1_azimuthal]
name = uniform_solidangle
polar-angle = spin1_polar
azimuthal-angle = spin1_azimuthal

[prior-spin2_a]
name = uniform
min-spin2_a = -0.99
max-spin2_a = 0.99

[prior-spin2_polar+spin2_azimuthal]
name = uniform_solidangle
polar-angle = spin2_polar
azimuthal-angle = spin2_azimuthal

; The waveform generator expects spins to be in cartesian coordinates, with
; names spin(1|2)(x|y|z). We therefore need to provide a waveform transform
; that converts the spherical coordinates that we have defined the spin prior
; in to cartesian coordinates.
[waveform_transforms-spin1x+spin1y+spin1z]
name = spherical_to_cartesian
x = spin1x
y = spin1y
z = spin1z
radial = spin1_a
polar = spin1_polar
azimuthal = spin1_azimuthal

[waveform_transforms-spin2x+spin2y+spin2z]
name = spherical_to_cartesian
x = spin2x
y = spin2y
z = spin2z
radial = spin2_a
polar = spin2_polar
azimuthal = spin2_azimuthal

[prior-distance]
; following gives a uniform volume prior
name = uniform_radius
min-distance = 200
max-distance = 300

[prior-coa_phase]
; coalescence phase prior
name = uniform_angle

[prior-inclination]
; inclination prior
name = sin_angle

[prior-ra+dec]
; sky position prior
name = uniform_sky

[prior-polarization]
; polarization prior
name = uniform_angle
